{"version":3,"file":"index.js","sources":["../node_modules/svg-partial-circle/index.js","../src/ReactMinimalPieChartPath.js","../src/ReactMinimalPieChart.js"],"sourcesContent":["'use strict'\n\n// from http://stackoverflow.com/a/18473154\nconst partialCircle = (cx, cy, r, start, end) => {\n\tconst length = end - start\n\tif (length === 0) return []\n\n\tconst fromX = r * Math.cos(start) + cx\n\tconst fromY = r * Math.sin(start) + cy\n\tconst toX = r * Math.cos(end) + cx\n\tconst toY = r * Math.sin(end) + cy\n\tconst large = Math.abs(length) <= Math.PI ? '0' : '1'\n\tconst sweep = length < 0 ? '0' : '1'\n\n\treturn [\n\t\t['M', fromX, fromY],\n\t\t['A', r, r, 0, large, sweep, toX, toY]\n\t]\n}\n\nmodule.exports = partialCircle\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport partialCircle from 'svg-partial-circle';\n\nconst PI = Math.PI;\nconst degreesToRadians = degrees => ((degrees * PI) / 180);\n\nconst makePathCommands = (cx, cy, startAngle, lengthAngle, radius) => {\n  let patchedLengthAngle = lengthAngle;\n\n  if (patchedLengthAngle >= 360) patchedLengthAngle = 359.999;\n  if (patchedLengthAngle <= -360) patchedLengthAngle = -359.999;\n\n  return partialCircle(\n      cx, cy,                                   // center X and Y\n      radius,\n      degreesToRadians(startAngle),\n      degreesToRadians(startAngle + patchedLengthAngle)\n  )\n  .map(command => command.join(' '))\n  .join(' ');\n};\n\nexport default function ReactMinimalPieChartPath (\n  {cx, cy, startAngle, lengthAngle, radius, lineWidth, reveal, ...props}\n) {\n  const actualRadio = radius - (lineWidth / 2);\n  const pathCommands = makePathCommands(\n    cx, cy,\n    startAngle,\n    lengthAngle,\n    actualRadio\n  );\n  let strokeDasharray;\n  let strokeDashoffset;\n\n  // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n  // https://css-tricks.com/svg-line-animation-works/\n  if (typeof reveal === 'number') {\n    strokeDasharray = ((PI * actualRadio) / 180) * Math.abs(lengthAngle);\n    strokeDashoffset = strokeDasharray + (strokeDasharray / 100) * reveal;\n  }\n\n  return (\n    <path\n      d={pathCommands}\n      strokeWidth={lineWidth}\n      strokeDasharray={strokeDasharray}\n      strokeDashoffset={strokeDashoffset}\n      {...props}\n    />\n  );\n}\n\nReactMinimalPieChartPath.displayName = 'ReactMinimalPieChartPath';\n\nReactMinimalPieChartPath.propTypes = {\n  cx: PropTypes.number.isRequired,\n  cy: PropTypes.number.isRequired,\n  startAngle: PropTypes.number,\n  lengthAngle: PropTypes.number,\n  radius: PropTypes.number,\n  lineWidth: PropTypes.number,\n  reveal: PropTypes.number,\n};\n\nReactMinimalPieChartPath.defaultProps = {\n  startAngle: 0,\n  lengthAngle: 0,\n  lineWidth: 100,\n  radius: 100,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Path from './ReactMinimalPieChartPath';\n\nconst VIEWBOX_SIZE = 100;\nconst VIEWBOX_HALF_SIZE = VIEWBOX_SIZE / 2;\n\nconst sumValues = data => data.reduce((acc, dataEntry) => acc + dataEntry.value, 0);\n\nconst evaluateViewBoxSize = (ratio, baseSize) => {\n  // Wide ratio\n  if (ratio > 1) {\n    return `${baseSize} ${baseSize / ratio}`;\n  }\n  // Narrow/squared ratio\n  return `${baseSize * ratio} ${baseSize}`;\n}\n\n// @TODO extract padding evaluation\nconst evaluateDegreesFromValues = (data, totalAngle, totalValue, paddingAngle) => {\n  const total = totalValue || sumValues(data);\n\n  // Remove segments padding from total degrees\n  const degreesTakenByPadding = paddingAngle * (data.length);\n  let totalDegrees = Math.abs(totalAngle) - degreesTakenByPadding;\n\n  if (totalDegrees > 360) totalDegrees = 360;\n  if (totalAngle < 0) totalDegrees = -totalDegrees;\n\n  // Append \"degrees\" into each data entry\n  return data.map(dataEntry => Object.assign(\n    { degrees: (dataEntry.value / total) * totalDegrees },\n    dataEntry\n  ));\n};\n\nconst makeSegmentTransitionStyle = (duration, easing) => ({\n  transition: `stroke-dashoffset ${duration}ms ${easing}`,\n});\n\nconst makeSegments = (data, props, hide) => {\n  // Keep track of how many degrees have already been taken\n  let lastSegmentAngle = props.startAngle;\n  const segmentsPaddingAngle = props.paddingAngle * (props.lengthAngle / Math.abs(props.lengthAngle));\n  let reveal;\n\n  const style = props.animate\n    ? makeSegmentTransitionStyle(props.animationDuration, props.animationEasing)\n    : undefined;\n\n  // Hide/reveal the segment?\n  if (hide === true) {\n    reveal = 0;\n  } else if (typeof props.reveal === 'number') {\n    reveal = props.reveal;\n  } else if (hide === false) {\n    reveal = 100;\n  }\n\n  return data.map((dataEntry, index) => {\n    const startAngle = lastSegmentAngle;\n    lastSegmentAngle += dataEntry.degrees + segmentsPaddingAngle;\n\n    return (\n      <Path\n        key={dataEntry.key || index}\n        cx={props.cx}\n        cy={props.cy}\n        startAngle={startAngle}\n        lengthAngle={dataEntry.degrees}\n        radius={props.radius}\n        lineWidth={(props.radius / 100) * props.lineWidth}\n        reveal={reveal}\n        style={style}\n        stroke={dataEntry.color}\n        strokeLinecap={props.rounded ? 'round' : undefined}\n        fill=\"none\"\n      />\n    );\n  });\n};\n\nexport default class ReactMinimalPieChart extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    if (this.props.animate === true) {\n      this.hideSegments = true;\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.animate === true && requestAnimationFrame) {\n      this.initialAnimationTimerId = setTimeout(\n        () => {\n          this.initialAnimationTimerId = null;\n          this.initialAnimationRAFId = requestAnimationFrame(\n            () => {\n              this.initialAnimationRAFId = null,\n              this.startAnimation();\n            }\n          )\n        }\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.initialAnimationTimerId) {\n      clearTimeout(this.initialAnimationTimerId);\n    }\n    if (this.initialAnimationRAFId) {\n      cancelAnimationFrame(this.initialAnimationRAFId);\n    }\n  }\n\n  startAnimation() {\n    this.hideSegments = false;\n    this.forceUpdate();\n  }\n\n  render() {\n    if (this.props.data === undefined) {\n      return null;\n    }\n\n    const normalizedData = evaluateDegreesFromValues(\n      this.props.data,\n      this.props.lengthAngle,\n      this.props.totalValue,\n      this.props.paddingAngle\n    );\n\n    return (\n      <div\n        className={this.props.className}\n        style={this.props.style}\n      >\n        <svg\n          viewBox={`0 0 ${evaluateViewBoxSize(this.props.ratio, VIEWBOX_SIZE)}`}\n          width=\"100%\"\n          height=\"100%\"\n          style={{ display: 'block' }}\n        >\n          {makeSegments(normalizedData, this.props, this.hideSegments)}\n        </svg>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nReactMinimalPieChart.displayName = 'ReactMinimalPieChart';\n\nReactMinimalPieChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number.isRequired,\n      key: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      color: PropTypes.string,\n    })\n  ),\n  cx: PropTypes.number,\n  cy: PropTypes.number,\n  ratio: PropTypes.number,\n  totalValue: PropTypes.number,\n  style: PropTypes.objectOf(\n    PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])\n  ),\n  startAngle: PropTypes.number,\n  lengthAngle: PropTypes.number,\n  paddingAngle: PropTypes.number,\n  lineWidth: PropTypes.number,\n  radius: PropTypes.number,\n  rounded: PropTypes.bool,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  animationEasing: PropTypes.string,\n  reveal: PropTypes.number,\n  children: PropTypes.node,\n};\n\nReactMinimalPieChart.defaultProps = {\n  cx: VIEWBOX_HALF_SIZE,\n  cy: VIEWBOX_HALF_SIZE,\n  ratio: 1,\n  startAngle: 0,\n  lengthAngle: 360,\n  paddingAngle: 0,\n  lineWidth: 100,\n  radius: VIEWBOX_HALF_SIZE,\n  rounded: false,\n  animate: false,\n  animationDuration: 500,\n  animationEasing: 'ease-out',\n};\n"],"names":["partialCircle","cx","cy","r","start","end","length","fromX","Math","cos","fromY","sin","toX","toY","large","abs","PI","sweep","module","degreesToRadians","degrees","makePathCommands","startAngle","lengthAngle","radius","patchedLengthAngle","map","command","join","ReactMinimalPieChartPath","lineWidth","reveal","props","actualRadio","pathCommands","strokeDasharray","strokeDashoffset","React","displayName","propTypes","PropTypes","number","isRequired","defaultProps","VIEWBOX_SIZE","VIEWBOX_HALF_SIZE","sumValues","data","reduce","acc","dataEntry","value","evaluateViewBoxSize","ratio","baseSize","evaluateDegreesFromValues","totalAngle","totalValue","paddingAngle","total","degreesTakenByPadding","totalDegrees","Object","assign","makeSegmentTransitionStyle","duration","easing","makeSegments","hide","lastSegmentAngle","segmentsPaddingAngle","style","animate","animationDuration","animationEasing","undefined","index","Path","key","color","rounded","ReactMinimalPieChart","hideSegments","componentDidMount","requestAnimationFrame","initialAnimationTimerId","setTimeout","initialAnimationRAFId","startAnimation","componentWillUnmount","forceUpdate","render","normalizedData","className","display","children","PureComponent","arrayOf","shape","oneOfType","string","objectOf","bool","node"],"mappings":"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"}